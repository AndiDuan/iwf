/*
WorkflowState APIs

This APIs for iwf-server to invoke user workflow code defined in WorkflowState using any iwf SDKs

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TimerResult struct for TimerResult
type TimerResult struct {
	CommandId *string `json:"commandId,omitempty"`
	TimerStatus *string `json:"timerStatus,omitempty"`
}

// NewTimerResult instantiates a new TimerResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimerResult() *TimerResult {
	this := TimerResult{}
	return &this
}

// NewTimerResultWithDefaults instantiates a new TimerResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimerResultWithDefaults() *TimerResult {
	this := TimerResult{}
	return &this
}

// GetCommandId returns the CommandId field value if set, zero value otherwise.
func (o *TimerResult) GetCommandId() string {
	if o == nil || o.CommandId == nil {
		var ret string
		return ret
	}
	return *o.CommandId
}

// GetCommandIdOk returns a tuple with the CommandId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimerResult) GetCommandIdOk() (*string, bool) {
	if o == nil || o.CommandId == nil {
		return nil, false
	}
	return o.CommandId, true
}

// HasCommandId returns a boolean if a field has been set.
func (o *TimerResult) HasCommandId() bool {
	if o != nil && o.CommandId != nil {
		return true
	}

	return false
}

// SetCommandId gets a reference to the given string and assigns it to the CommandId field.
func (o *TimerResult) SetCommandId(v string) {
	o.CommandId = &v
}

// GetTimerStatus returns the TimerStatus field value if set, zero value otherwise.
func (o *TimerResult) GetTimerStatus() string {
	if o == nil || o.TimerStatus == nil {
		var ret string
		return ret
	}
	return *o.TimerStatus
}

// GetTimerStatusOk returns a tuple with the TimerStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimerResult) GetTimerStatusOk() (*string, bool) {
	if o == nil || o.TimerStatus == nil {
		return nil, false
	}
	return o.TimerStatus, true
}

// HasTimerStatus returns a boolean if a field has been set.
func (o *TimerResult) HasTimerStatus() bool {
	if o != nil && o.TimerStatus != nil {
		return true
	}

	return false
}

// SetTimerStatus gets a reference to the given string and assigns it to the TimerStatus field.
func (o *TimerResult) SetTimerStatus(v string) {
	o.TimerStatus = &v
}

func (o TimerResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CommandId != nil {
		toSerialize["commandId"] = o.CommandId
	}
	if o.TimerStatus != nil {
		toSerialize["timerStatus"] = o.TimerStatus
	}
	return json.Marshal(toSerialize)
}

type NullableTimerResult struct {
	value *TimerResult
	isSet bool
}

func (v NullableTimerResult) Get() *TimerResult {
	return v.value
}

func (v *NullableTimerResult) Set(val *TimerResult) {
	v.value = val
	v.isSet = true
}

func (v NullableTimerResult) IsSet() bool {
	return v.isSet
}

func (v *NullableTimerResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimerResult(val *TimerResult) *NullableTimerResult {
	return &NullableTimerResult{value: val, isSet: true}
}

func (v NullableTimerResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimerResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


