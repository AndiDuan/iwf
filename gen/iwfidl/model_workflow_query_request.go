/*
Workflow APIs

This APIs for iwf SDKs to operate workflows

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iwfidl

import (
	"encoding/json"
)

// WorkflowQueryRequest struct for WorkflowQueryRequest
type WorkflowQueryRequest struct {
	WorkflowId *string `json:"workflowId,omitempty"`
	WorkflowRunId *string `json:"workflowRunId,omitempty"`
	AttributeKeys []string `json:"attributeKeys,omitempty"`
}

// NewWorkflowQueryRequest instantiates a new WorkflowQueryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowQueryRequest() *WorkflowQueryRequest {
	this := WorkflowQueryRequest{}
	return &this
}

// NewWorkflowQueryRequestWithDefaults instantiates a new WorkflowQueryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowQueryRequestWithDefaults() *WorkflowQueryRequest {
	this := WorkflowQueryRequest{}
	return &this
}

// GetWorkflowId returns the WorkflowId field value if set, zero value otherwise.
func (o *WorkflowQueryRequest) GetWorkflowId() string {
	if o == nil || o.WorkflowId == nil {
		var ret string
		return ret
	}
	return *o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowQueryRequest) GetWorkflowIdOk() (*string, bool) {
	if o == nil || o.WorkflowId == nil {
		return nil, false
	}
	return o.WorkflowId, true
}

// HasWorkflowId returns a boolean if a field has been set.
func (o *WorkflowQueryRequest) HasWorkflowId() bool {
	if o != nil && o.WorkflowId != nil {
		return true
	}

	return false
}

// SetWorkflowId gets a reference to the given string and assigns it to the WorkflowId field.
func (o *WorkflowQueryRequest) SetWorkflowId(v string) {
	o.WorkflowId = &v
}

// GetWorkflowRunId returns the WorkflowRunId field value if set, zero value otherwise.
func (o *WorkflowQueryRequest) GetWorkflowRunId() string {
	if o == nil || o.WorkflowRunId == nil {
		var ret string
		return ret
	}
	return *o.WorkflowRunId
}

// GetWorkflowRunIdOk returns a tuple with the WorkflowRunId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowQueryRequest) GetWorkflowRunIdOk() (*string, bool) {
	if o == nil || o.WorkflowRunId == nil {
		return nil, false
	}
	return o.WorkflowRunId, true
}

// HasWorkflowRunId returns a boolean if a field has been set.
func (o *WorkflowQueryRequest) HasWorkflowRunId() bool {
	if o != nil && o.WorkflowRunId != nil {
		return true
	}

	return false
}

// SetWorkflowRunId gets a reference to the given string and assigns it to the WorkflowRunId field.
func (o *WorkflowQueryRequest) SetWorkflowRunId(v string) {
	o.WorkflowRunId = &v
}

// GetAttributeKeys returns the AttributeKeys field value if set, zero value otherwise.
func (o *WorkflowQueryRequest) GetAttributeKeys() []string {
	if o == nil || o.AttributeKeys == nil {
		var ret []string
		return ret
	}
	return o.AttributeKeys
}

// GetAttributeKeysOk returns a tuple with the AttributeKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowQueryRequest) GetAttributeKeysOk() ([]string, bool) {
	if o == nil || o.AttributeKeys == nil {
		return nil, false
	}
	return o.AttributeKeys, true
}

// HasAttributeKeys returns a boolean if a field has been set.
func (o *WorkflowQueryRequest) HasAttributeKeys() bool {
	if o != nil && o.AttributeKeys != nil {
		return true
	}

	return false
}

// SetAttributeKeys gets a reference to the given []string and assigns it to the AttributeKeys field.
func (o *WorkflowQueryRequest) SetAttributeKeys(v []string) {
	o.AttributeKeys = v
}

func (o WorkflowQueryRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.WorkflowId != nil {
		toSerialize["workflowId"] = o.WorkflowId
	}
	if o.WorkflowRunId != nil {
		toSerialize["workflowRunId"] = o.WorkflowRunId
	}
	if o.AttributeKeys != nil {
		toSerialize["attributeKeys"] = o.AttributeKeys
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowQueryRequest struct {
	value *WorkflowQueryRequest
	isSet bool
}

func (v NullableWorkflowQueryRequest) Get() *WorkflowQueryRequest {
	return v.value
}

func (v *NullableWorkflowQueryRequest) Set(val *WorkflowQueryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowQueryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowQueryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowQueryRequest(val *WorkflowQueryRequest) *NullableWorkflowQueryRequest {
	return &NullableWorkflowQueryRequest{value: val, isSet: true}
}

func (v NullableWorkflowQueryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowQueryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


