/*
Workflow APIs

This APIs for iwf SDKs to operate workflows

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iwfidl

import (
	"encoding/json"
)

// StateMovement struct for StateMovement
type StateMovement struct {
	StateId string `json:"stateId"`
	NextStateInput *EncodedObject `json:"nextStateInput,omitempty"`
	NextStateOptions *WorkflowStateOptions `json:"nextStateOptions,omitempty"`
}

// NewStateMovement instantiates a new StateMovement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStateMovement(stateId string) *StateMovement {
	this := StateMovement{}
	this.StateId = stateId
	return &this
}

// NewStateMovementWithDefaults instantiates a new StateMovement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStateMovementWithDefaults() *StateMovement {
	this := StateMovement{}
	return &this
}

// GetStateId returns the StateId field value
func (o *StateMovement) GetStateId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StateId
}

// GetStateIdOk returns a tuple with the StateId field value
// and a boolean to check if the value has been set.
func (o *StateMovement) GetStateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StateId, true
}

// SetStateId sets field value
func (o *StateMovement) SetStateId(v string) {
	o.StateId = v
}

// GetNextStateInput returns the NextStateInput field value if set, zero value otherwise.
func (o *StateMovement) GetNextStateInput() EncodedObject {
	if o == nil || o.NextStateInput == nil {
		var ret EncodedObject
		return ret
	}
	return *o.NextStateInput
}

// GetNextStateInputOk returns a tuple with the NextStateInput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StateMovement) GetNextStateInputOk() (*EncodedObject, bool) {
	if o == nil || o.NextStateInput == nil {
		return nil, false
	}
	return o.NextStateInput, true
}

// HasNextStateInput returns a boolean if a field has been set.
func (o *StateMovement) HasNextStateInput() bool {
	if o != nil && o.NextStateInput != nil {
		return true
	}

	return false
}

// SetNextStateInput gets a reference to the given EncodedObject and assigns it to the NextStateInput field.
func (o *StateMovement) SetNextStateInput(v EncodedObject) {
	o.NextStateInput = &v
}

// GetNextStateOptions returns the NextStateOptions field value if set, zero value otherwise.
func (o *StateMovement) GetNextStateOptions() WorkflowStateOptions {
	if o == nil || o.NextStateOptions == nil {
		var ret WorkflowStateOptions
		return ret
	}
	return *o.NextStateOptions
}

// GetNextStateOptionsOk returns a tuple with the NextStateOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StateMovement) GetNextStateOptionsOk() (*WorkflowStateOptions, bool) {
	if o == nil || o.NextStateOptions == nil {
		return nil, false
	}
	return o.NextStateOptions, true
}

// HasNextStateOptions returns a boolean if a field has been set.
func (o *StateMovement) HasNextStateOptions() bool {
	if o != nil && o.NextStateOptions != nil {
		return true
	}

	return false
}

// SetNextStateOptions gets a reference to the given WorkflowStateOptions and assigns it to the NextStateOptions field.
func (o *StateMovement) SetNextStateOptions(v WorkflowStateOptions) {
	o.NextStateOptions = &v
}

func (o StateMovement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["stateId"] = o.StateId
	}
	if o.NextStateInput != nil {
		toSerialize["nextStateInput"] = o.NextStateInput
	}
	if o.NextStateOptions != nil {
		toSerialize["nextStateOptions"] = o.NextStateOptions
	}
	return json.Marshal(toSerialize)
}

type NullableStateMovement struct {
	value *StateMovement
	isSet bool
}

func (v NullableStateMovement) Get() *StateMovement {
	return v.value
}

func (v *NullableStateMovement) Set(val *StateMovement) {
	v.value = val
	v.isSet = true
}

func (v NullableStateMovement) IsSet() bool {
	return v.isSet
}

func (v *NullableStateMovement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStateMovement(val *StateMovement) *NullableStateMovement {
	return &NullableStateMovement{value: val, isSet: true}
}

func (v NullableStateMovement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStateMovement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


