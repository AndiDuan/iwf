/*
Workflow APIs

This APIs for iwf SDKs to operate workflows

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iwfidl

import (
	"encoding/json"
)

// AttributesLoadingPolicy struct for AttributesLoadingPolicy
type AttributesLoadingPolicy struct {
	AttributeLoadingType *string `json:"attributeLoadingType,omitempty"`
	AttributeKeys []string `json:"attributeKeys,omitempty"`
}

// NewAttributesLoadingPolicy instantiates a new AttributesLoadingPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttributesLoadingPolicy() *AttributesLoadingPolicy {
	this := AttributesLoadingPolicy{}
	return &this
}

// NewAttributesLoadingPolicyWithDefaults instantiates a new AttributesLoadingPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttributesLoadingPolicyWithDefaults() *AttributesLoadingPolicy {
	this := AttributesLoadingPolicy{}
	return &this
}

// GetAttributeLoadingType returns the AttributeLoadingType field value if set, zero value otherwise.
func (o *AttributesLoadingPolicy) GetAttributeLoadingType() string {
	if o == nil || o.AttributeLoadingType == nil {
		var ret string
		return ret
	}
	return *o.AttributeLoadingType
}

// GetAttributeLoadingTypeOk returns a tuple with the AttributeLoadingType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributesLoadingPolicy) GetAttributeLoadingTypeOk() (*string, bool) {
	if o == nil || o.AttributeLoadingType == nil {
		return nil, false
	}
	return o.AttributeLoadingType, true
}

// HasAttributeLoadingType returns a boolean if a field has been set.
func (o *AttributesLoadingPolicy) HasAttributeLoadingType() bool {
	if o != nil && o.AttributeLoadingType != nil {
		return true
	}

	return false
}

// SetAttributeLoadingType gets a reference to the given string and assigns it to the AttributeLoadingType field.
func (o *AttributesLoadingPolicy) SetAttributeLoadingType(v string) {
	o.AttributeLoadingType = &v
}

// GetAttributeKeys returns the AttributeKeys field value if set, zero value otherwise.
func (o *AttributesLoadingPolicy) GetAttributeKeys() []string {
	if o == nil || o.AttributeKeys == nil {
		var ret []string
		return ret
	}
	return o.AttributeKeys
}

// GetAttributeKeysOk returns a tuple with the AttributeKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributesLoadingPolicy) GetAttributeKeysOk() ([]string, bool) {
	if o == nil || o.AttributeKeys == nil {
		return nil, false
	}
	return o.AttributeKeys, true
}

// HasAttributeKeys returns a boolean if a field has been set.
func (o *AttributesLoadingPolicy) HasAttributeKeys() bool {
	if o != nil && o.AttributeKeys != nil {
		return true
	}

	return false
}

// SetAttributeKeys gets a reference to the given []string and assigns it to the AttributeKeys field.
func (o *AttributesLoadingPolicy) SetAttributeKeys(v []string) {
	o.AttributeKeys = v
}

func (o AttributesLoadingPolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AttributeLoadingType != nil {
		toSerialize["attributeLoadingType"] = o.AttributeLoadingType
	}
	if o.AttributeKeys != nil {
		toSerialize["attributeKeys"] = o.AttributeKeys
	}
	return json.Marshal(toSerialize)
}

type NullableAttributesLoadingPolicy struct {
	value *AttributesLoadingPolicy
	isSet bool
}

func (v NullableAttributesLoadingPolicy) Get() *AttributesLoadingPolicy {
	return v.value
}

func (v *NullableAttributesLoadingPolicy) Set(val *AttributesLoadingPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableAttributesLoadingPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableAttributesLoadingPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttributesLoadingPolicy(val *AttributesLoadingPolicy) *NullableAttributesLoadingPolicy {
	return &NullableAttributesLoadingPolicy{value: val, isSet: true}
}

func (v NullableAttributesLoadingPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttributesLoadingPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


