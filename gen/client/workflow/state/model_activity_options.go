/*
WorkflowState APIs

This APIs for iwf-server to invoke user workflow code defined in WorkflowState using any iwf SDKs

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package state

import (
	"encoding/json"
)

// ActivityOptions struct for ActivityOptions
type ActivityOptions struct {
	StartToCloseTimeoutSeconds *int32 `json:"startToCloseTimeoutSeconds,omitempty"`
}

// NewActivityOptions instantiates a new ActivityOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityOptions() *ActivityOptions {
	this := ActivityOptions{}
	return &this
}

// NewActivityOptionsWithDefaults instantiates a new ActivityOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityOptionsWithDefaults() *ActivityOptions {
	this := ActivityOptions{}
	return &this
}

// GetStartToCloseTimeoutSeconds returns the StartToCloseTimeoutSeconds field value if set, zero value otherwise.
func (o *ActivityOptions) GetStartToCloseTimeoutSeconds() int32 {
	if o == nil || o.StartToCloseTimeoutSeconds == nil {
		var ret int32
		return ret
	}
	return *o.StartToCloseTimeoutSeconds
}

// GetStartToCloseTimeoutSecondsOk returns a tuple with the StartToCloseTimeoutSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityOptions) GetStartToCloseTimeoutSecondsOk() (*int32, bool) {
	if o == nil || o.StartToCloseTimeoutSeconds == nil {
		return nil, false
	}
	return o.StartToCloseTimeoutSeconds, true
}

// HasStartToCloseTimeoutSeconds returns a boolean if a field has been set.
func (o *ActivityOptions) HasStartToCloseTimeoutSeconds() bool {
	if o != nil && o.StartToCloseTimeoutSeconds != nil {
		return true
	}

	return false
}

// SetStartToCloseTimeoutSeconds gets a reference to the given int32 and assigns it to the StartToCloseTimeoutSeconds field.
func (o *ActivityOptions) SetStartToCloseTimeoutSeconds(v int32) {
	o.StartToCloseTimeoutSeconds = &v
}

func (o ActivityOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StartToCloseTimeoutSeconds != nil {
		toSerialize["startToCloseTimeoutSeconds"] = o.StartToCloseTimeoutSeconds
	}
	return json.Marshal(toSerialize)
}

type NullableActivityOptions struct {
	value *ActivityOptions
	isSet bool
}

func (v NullableActivityOptions) Get() *ActivityOptions {
	return v.value
}

func (v *NullableActivityOptions) Set(val *ActivityOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityOptions(val *ActivityOptions) *NullableActivityOptions {
	return &NullableActivityOptions{value: val, isSet: true}
}

func (v NullableActivityOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


